//#define COUNTER
#define FLICKER

// include the SPI library:
#include <SPI.h>

// set pin 10 as the slave select for the digital pot:
  const int slaveSelectPin = 10;

struct fin { byte lsb,msb; };

const static fin data[] = 
{
  {0x00,0x00}, // 0
  {0x77,0x00}, // 1
  {0x88,0x80}, // 2
  {0x88,0x80}, // 3
  {0x88,0x80}, // 4
  {0x80,0x80}, // 5
  {0x80,0x80}, // 6
  {0x00,0x00}, // 7
  {0x00,0x00}, // 8
  {0x07,0x00}, // 9
  {0x08,0x80}, // 10
  {0x08,0x80}, // 11
  {0x08,0x80}, // 12
  {0x08,0x80}, // 13
  {0x08,0x80}, // 14
  {0xFF,0x00}, // 15
  {0x00,0x00}, // 16
  {0x00,0x00}, // 17
  {0xFF,0x80}, // 18
  {0x80,0x00}, // 19
  {0x80,0x00}, // 20
  {0x80,0x00}, // 21
  {0x80,0x00}, // 22
  {0x80,0x00}, // 23
  {0xFF,0x80}, // 24
  {0x00,0x00}, // 25
  {0x00,0x00}, // 26
  {0x7F,0x00}, // 27
  {0x80,0x80}, // 28
  {0x80,0x80}, // 29
  {0x80,0x80}, // 30
  {0x80,0x80}, // 31
  {0x80,0x80}, // 32
  {0x7F,0x00}, // 33
  {0x00,0x00}, // 34
  {0x00,0x00}, // 35
  {0xF7,0x00}, // 36
  {0x08,0x80}, // 37
  {0x08,0x80}, // 38
  {0x08,0x80}, // 39
  {0x08,0x80}, // 40
  {0x08,0x80}, // 41
  {0xFF,0x80}, // 42
  {0x00,0x00}, // 43
  {0x20,0x00}, // 44
  {0x63,0x00}, // 45
  {0xA0,0x80}, // 46
  {0x80,0x80}, // 47
  {0x80,0x80}, // 48
  {0x80,0x80}, // 49
  {0x7F,0x00}, // 50
  {0x00,0x00}, // 51
  {0x00,0x00}, // 52
  {0x00,0x00}, // 53
  {0x00,0x00}, // 54
  {0x00,0x00}, // 51
  {0x00,0x00}, // 52
  {0x00,0x00}, // 53
  {0x00,0x00}, // 54
  {0x01,0x80}, // 55
  {0x06,0x00}, // 56
  {0x18,0x00}, // 57
  {0x60,0x00}, // 58
  {0x80,0x00}, // 59
  {0x60,0x00}, // 60
  {0x18,0x00}, // 61
  {0x06,0x00}, // 62
  {0x01,0x80}, // 63
  {0x00,0x00}, // 64
  {0x00,0x00}, // 65
  {0x7F,0x00}, // 66
  {0x80,0x80}, // 67
  {0x80,0x80}, // 68
  {0x80,0x80}, // 69
  {0x80,0x80}, // 70
  {0x80,0x80}, // 71
  {0x7F,0x00}, // 72
  {0x00,0x00}, // 73
  {0x00,0x00}, // 74
  {0x07,0x00}, // 75
  {0x08,0x80}, // 76
  {0x08,0x80}, // 77
  {0x08,0x80}, // 78
  {0x08,0x80}, // 79
  {0x08,0x80}, // 80
  {0xFF,0x80}, // 81
  {0x00,0x00}, // 82
  {0x00,0x00}, // 83
  {0x7F,0x00}, // 84
  {0x80,0x80}, // 85
  {0x80,0x80}, // 86
  {0x80,0x80}, // 87
  {0x80,0x80}, // 88
  {0x80,0x80}, // 89
  {0xFF,0x80}, // 90
  {0x00,0x00}, // 91
  {0x00,0x00}, // 92
  {0x77,0x00}, // 93
  {0x88,0x80}, // 94
  {0x88,0x80}, // 95
  {0x88,0x80}, // 96
  {0x88,0x80}, // 97
  {0x80,0x80}, // 98
  {0x80,0x80}, // 99
  {0x00,0x00}, // 104
  {0x00,0x00}, // 105
  {0x00,0x00}, // 106
  {0x00,0x00}, // 107
  {0x00,0x00}, // 108
  {0x00,0x00}, // 109
  {0x00,0x00}, // 110
  {0x00,0x00}, // 111
  {0x00,0x00}, // 112
  {0x00,0x00}, // 113
  {0x00,0x00}, // 114
  {0x00,0x00}, // 115
  {0x00,0x00}, // 116
  {0x00,0x00}, // 117
  {0x00,0x00}, // 118
  {0x00,0x00}, // 119
  {0x00,0x00}, // 120
  {0x00,0x00}, // 121
  {0x00,0x00}, // 122
  {0x00,0x00}, // 123
  {0x00,0x00}, // 124
  {0x00,0x00}, // 125
  {0x00,0x00}, // 126
  {0x00,0x00}, // 127
  {0x00,0x00}, // 128
  {0x00,0x00}, // 129
  {0x00,0x00}, // 130
  {0x00,0x00}, // 131
  {0x00,0x00}, // 132
  {0x00,0x00}, // 133
  {0x00,0x00}, // 134
  {0x00,0x00}, // 135
  {0x00,0x00}, // 136
  {0x00,0x00}, // 137
  {0x00,0x00}, // 138
  {0x00,0x00}, // 139
  {0x00,0x00}, // 140
  {0x00,0x00}, // 141
  {0x00,0x00}, // 142
  {0x00,0x00}, // 143
  {0xFF,0x80}, // 144
  {0x08,0x00}, // 145
  {0x08,0x00}, // 146
  {0x08,0x00}, // 147
  {0x08,0x00}, // 148
  {0x08,0x00}, // 149
  {0xFF,0x80}, // 150
  {0x00,0x00}, // 151
  {0x00,0x00}, // 152
  {0xFF,0x80}, // 153
  {0x88,0x80}, // 154
  {0x88,0x80}, // 155
  {0x88,0x80}, // 156
  {0x88,0x80}, // 157
  {0x80,0x80}, // 158
  {0x80,0x80}, // 159
  {0x00,0x00}, // 160
  {0x00,0x00}, // 161
  {0xFF,0x80}, // 162
  {0x00,0x80}, // 163
  {0x00,0x80}, // 164
  {0x00,0x80}, // 165
  {0x00,0x80}, // 166
  {0x00,0x80}, // 167
  {0x00,0x80}, // 168
  {0x00,0x00}, // 169
  {0x00,0x00}, // 170
  {0xFF,0x80}, // 171
  {0x00,0x80}, // 172
  {0x00,0x80}, // 173
  {0x00,0x80}, // 174
  {0x00,0x80}, // 175
  {0x00,0x80}, // 176
  {0x00,0x80}, // 177
  {0x00,0x00}, // 178
  {0x00,0x00}, // 179
  {0x7F,0x00}, // 180
  {0x80,0x80}, // 181
  {0x80,0x80}, // 182
  {0x80,0x80}, // 183
  {0x80,0x80}, // 184
  {0x80,0x80}, // 185
  {0x7F,0x00}, // 186
  {0x00,0x00}, // 187
  {0x00,0x00}, // 188
  {0x00,0x00}, // 189
  {0x00,0x00}, // 190
  {0x00,0x00}, // 191
  {0x00,0x00}, // 192
  {0x00,0x00}, // 193
  {0x00,0x00}, // 194
  {0xFF,0x00}, // 195
  {0x00,0x80}, // 196
  {0x00,0x80}, // 197
  {0x03,0x00}, // 198
  {0x00,0x80}, // 199
  {0x00,0x80}, // 200
  {0xFF,0x00}, // 201
  {0x00,0x00}, // 202
  {0x00,0x00}, // 203
  {0x7F,0x00}, // 204
  {0x80,0x80}, // 205
  {0x80,0x80}, // 206
  {0x80,0x80}, // 207
  {0x80,0x80}, // 208
  {0x80,0x80}, // 209
  {0x7F,0x00}, // 210
  {0x00,0x00}, // 211
  {0x00,0x00}, // 212
  {0xFF,0x80}, // 213
  {0x88,0x00}, // 214
  {0x88,0x00}, // 215
  {0x88,0x00}, // 216
  {0x88,0x00}, // 217
  {0x88,0x00}, // 218
  {0x77,0x80}, // 219
  {0x00,0x00}, // 220
  {0x00,0x00}, // 221
  {0xFF,0x80}, // 222
  {0x00,0x80}, // 223
  {0x00,0x80}, // 224
  {0x00,0x80}, // 225
  {0x00,0x80}, // 226
  {0x00,0x80}, // 227
  {0x00,0x80}, // 228
  {0x00,0x00}, // 229
  {0x00,0x00}, // 230
  {0xFF,0x80}, // 231
  {0x80,0x80}, // 232
  {0x80,0x80}, // 233
  {0x80,0x80}, // 234
  {0x80,0x80}, // 235
  {0x80,0x80}, // 236
  {0x7F,0x00}, // 237
  {0x00,0x00}, // 238
  {0x00,0x00}, // 239
  {0x00,0x00}, // 240
  {0x00,0x00}, // 241
  {0x00,0x00}, // 242
  {0x00,0x00}, // 243
  {0x00,0x00}, // 244
  {0x00,0x00}, // 245
  {0x00,0x00}, // 246
  {0x00,0x00}, // 247
  {0x00,0x00}, // 248
  {0x00,0x00}, // 249
  {0x00,0x00}, // 250
  {0x00,0x00}, // 251
  {0x00,0x00}, // 252
  {0x00,0x00}, // 253
  {0x00,0x00}, // 254
  {0x00,0x00}, // 255
}; 

unsigned i = 0;

void setup() {
  //pinMode(out_en_pin, OUTPUT);      // sets the digital pin as output
  // set the slaveSelectPin as an output:
  pinMode (slaveSelectPin, OUTPUT);
  attachInterrupt(1,timing,FALLING);
  DDRD = 0xF3;
  // initialize SPI:
  SPI.begin();
  SPI.setClockDivider(SPI_CLOCK_DIV2);
  SPI.setBitOrder(LSBFIRST);
}

void loop() {
   
}

void timing(){
   //Runs when falling edge from Schmitt Trigger is seen
   for (i=0; i<256; ++i) {
       LEDWrite(data[i]);
   }
}

void LEDWrite( struct fin dat ) {
  PORTD = 0b00000000;
  SPI.transfer(dat.msb);
  SPI.transfer(dat.lsb);
  delayMicroseconds(122);
  PORTD = 0b10000000;  
}
